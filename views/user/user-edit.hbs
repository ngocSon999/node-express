<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">{{t 'user.editUser'}}</h3>
                    <div class="card-tools">
                        <a href="/admin/user" class="btn btn-secondary">{{t 'common.back'}}</a>
                    </div>
                </div>
                <div class="card-body">
                    <form id="editUserForm" enctype="multipart/form-data">
                    <input type="hidden" id="userId" value="{{user.id}}">
    <div class="mb-1">
        <label for="name" class="form-label">{{t 'user.name'}}</label>
        <input name="name" type="text" class="form-control" value="{{ user.name}}" required>
    </div>
    <div class="mb-1">
        <label for="email" class="form-label">{{t 'user.email'}}</label>
        <input name="email" type="email" class="form-control" value="{{ user.email}}" required>
    </div>
    <div class="mb-1">
        <label for="phone" class="form-label">{{t 'user.phone'}}</label>
        <input name="phone" type="text" class="form-control" value="{{ user.phone}}" required>
    </div>
    <div class="mb-1">
        <label for="avatar" class="form-label">{{t 'user.avatar'}}</label>
        <input name="avatar" type="file" class="form-control">
    </div>
    <div class="mb-1">
        <label for="password" class="form-label">{{t 'user.password'}}</label>
        <input name="password" type="password" class="form-control" placeholder="{{t 'user.keepCurrentPassword'}}">
    </div>
    <div class="mb-1">
        <label for="roles" class="form-label">{{t 'user.roles'}}</label>
        <select name="roles" class="form-select" multiple>
            {{#each roles}}
                <option value="{{this.id}}" {{#if (isSelected this.id ../user.roles)}}selected{{/if}}>{{this.name}}</option>
            {{/each}}
        </select>
    </div>
                        <button type="submit" class="btn btn-primary">{{t 'common.save'}}</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.querySelector('#editUserForm').addEventListener('submit', async function (e) {
    e.preventDefault();
    const form = e.target;
    const formData = new FormData(form);

    // Handle multiple role selection
    const roleSelect = form.querySelector('select[name="roles"]');
    const selectedRoles = Array.from(roleSelect.selectedOptions).map(option => option.value);
    formData.delete('roles'); // Remove the original roles data
    selectedRoles.forEach(roleId => {
        formData.append('roles[]', roleId);
    });

    // Only include password if it's not empty
    const password = formData.get('password');
    if (!password) {
        formData.delete('password');
    }
    const id = document.querySelector('#userId').value;

    try {
        const res = await fetch(`/api/v1/user/update/${id}`, {
        method: 'PUT',
        body: formData
        });
        let data = {};
        try {
        data = await res.json(); 
        } catch (err) {
        data.message = 'Cannot parse error response';
        }

        if (res.ok) {
            const url = '{{ routes "userManage" }}'
            showAlert(data.message, 'success', url);
            form.reset();
        } else {
            showAlert(data.message || '{{t "user.updateError"}}', 'danger');
        }
    } catch (err) {
        showAlert('{{t "error.500"}}', 'danger');
    }
});
</script>